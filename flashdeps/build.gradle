/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // Our lovely dependencies.
    implementation files('lib/ffdec_lib.jar')
    implementation 'org.json:json:20211205'
    implementation 'net.sourceforge.argparse4j:argparse4j:0.9.0'

}

application {
    // Define the main class for the application.
    mainClass = 'FlashDependencyScanner.DependencyChecker'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Include terms.json.
applicationDistribution.from("../terms.json") {
    into ""
}

// Configure the startScripts to not assume that they're in {rootdir}/bin
startScripts {
    executableDir = ""
}

// Put the start scripts in the archive's root directory.
distributions.main {
    contents {
        from startScripts
    }
}

// Exclude the bin directory.
distZip {
    eachFile { file ->
        if (file.path.contains('bin')) {
            file.exclude()
        }
    }
}
distTar {
    eachFile { file ->
        if (file.path.contains('bin')) {
            file.exclude()
        }
    }
}

// terms.json is located in the parent directory, so we run there.
File runningDir = new File('../')
tasks.run.workingDir = runningDir
